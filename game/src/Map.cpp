//
// Created by a on 23.03.2024.
//

#include "Map.h"
#include "TextureManager.h"

int lvl[20][25] = { // TODO: get from server
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0},
        {0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0, 0,0,0,0,0},
        {0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0, 0,0,0,0,0},
        {0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0, 0,0,0,0,0},
        {0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0, 0,0,0,0,0},
        {0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0, 0,0,0,0,0},
        {0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0, 0,0,0,0,0},
        {0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0, 0,0,0,0,0},
        {0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0, 0,0,0,0,0},
        {0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0, 0,0,0,0,0},
        {0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0, 0,0,0,0,0},
        {0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0, 0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0},
        {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0},
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
};

Map::Map() {
    grass = TextureManager::LoadTexture("res/imgs/grass.png");

    LoadMap(lvl);
    src.x = src.y = dst.x = dst.y = 0;
    src.w = src.h = dst.w = dst.h = 32;
}

Map::~Map() {
    SDL_DestroyTexture(grass);
}

void Map::LoadMap(int arr[20][25]) {
    for (int row = 0; row < 20; ++row) {
        for (int col = 0; col < 25; ++col) {
            map[row][col] = arr[row][col];
        }
    }
}

void Map::DrawMap() {
    for (int row = 0; row < 20; ++row) {
        for (int col = 0; col < 25; ++col) {
            dst.x = col * 32;
            dst.y = row * 32;

            switch (map[row][col]) {
                case 1:
                    TextureManager::Draw(grass, src, dst);
                    break;
            }
        }
    }
}
